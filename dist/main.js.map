{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/canvas.js","webpack:///./src/scripts/arrow.js","webpack:///./src/scripts/character.js","webpack:///./src/scripts/heart.js","webpack:///./src/scripts/skeleton.js","webpack:///./src/scripts/chest.js","webpack:///./src/scripts/dungeon.js","webpack:///./src/scripts/slime.js","webpack:///./src/scripts/ui.js","webpack:///./src/scripts/game.js","webpack:///./src/scripts/gameMusic.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","drawCanvas","fillStyle","fillRect","arrowSprite","Image","src","Arrow","x","y","speed","frameX","sprite","angle","this","left","right","top","bot","hit","counter","airToggle","save","translate","rotate","drawImage","restore","draw","arrows","animateArrows","forEach","arrow","update","setTimeout","splice","char","frameY","arrowSpec","arrowSpeed","addEventListener","event","Math","atan2","clientY","clientX","cos","sin","arrowCount","push","shooting","clickXPos","heartImg","heartUI","heartPos","heartCount","heart","skeleton","Skeleton","randomFactor","random","scale","centerPointX","centerPointY","flip","randomCounter","xSpeed","ySpeed","moving","stop","xMove","yMove","abs","skeletons","chest","chester","handleFrames","dungeonImg","dungeonOverlay","drawDungeon","image","dungeon","slimes","length","count","min","ceil","max","floor","createSkeletons","hypot","arrSpeed","fireRate","directionImg","directionSprite","frame","toggle","map","location","actualScale","getHitFrame","idleFrame","deathFrame","dead","invulnerable","reset","damage","charSprite","charShooting","charGetHit","charIdle","charDeath","drawSprite","img","animate","handleDeathFrame","handleSpriteFrame","handleGetHitFrame","keys","e","preventDefault","console","log","slime","Slime","createSlimes","uiWidth","uiSideGap","dungeonHeight","rocks","require","statBars","strokeRect","Audio","onload","setInterval","fontSize","clearRect","createPattern","uiHeight","dungeonWidth","uiBoxGap","uiTopPos","totalLeftPos","size","strokeStyle","lineWidth","drawUi","index","handleSkeletonAnimation","handleMovement","handleSlimeAnimation","font","toString","fillText","arrowStats","measureText","reload"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const canvas = document.getElementById('game-canvas');\nconst ctx = canvas.getContext('2d');\ncanvas.width = window.innerWidth - 20;\ncanvas.height = window.innerHeight - 20;\n\nconst drawCanvas = () => {\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0,0,window.innerWidth,window.innerHeight);\n}\n\nmodule.exports = {\n    canvas,\n    ctx,\n    drawCanvas\n}\n\n     ","import {ctx, canvas} from './canvas'\nimport {char, handleShootingFrame } from './character'\nconst arrowSprite = new Image();\narrowSprite.src = \"src/sprites/Huntress/Sprites/Arrow/Move.png\";\n\n\nclass Arrow {\n    constructor(x, y, speed, width, height, frameX, sprite, angle) {\n        this.x = x;\n        this.y = y;\n        this.speed = speed;\n        this.width = width;\n        this.height = height;\n        this.frameX = frameX\n        this.sprite = sprite;\n        this.angle = angle;\n        this.left = this.x\n        this.right = this.x + this.width*(canvas.width*.001)\n        this.top = this.y\n        this.bot = this.y + this.height*(canvas.height*.001)\n        this.hit = false;\n        this.counter = 1;\n        this.airToggle = 'off';\n    }\n\n    draw() {\n        ctx.save()\n        ctx.translate(this.x, this.y)\n        ctx.rotate(this.angle)\n        ctx.translate(-this.x, -this.y)\n        ctx.drawImage(\n        arrowSprite, \n        this.width * this.frameX,\n        0, \n        this.width, \n        this.height, \n        this.x, \n        this.y, \n        this.width*(canvas.width*.001), \n        this.height*(canvas.height*.00175))\n        ctx.restore()     \n        if (this.counter++ % 10 === 0) this.airToggle = 'on'\n        if (this.airToggle === 'on') {\n            ctx.save()\n            ctx.translate(this.x, this.y)\n            ctx.rotate(this.angle)\n            ctx.translate(-(this.x), -(this.y))\n            ctx.fillStyle = 'rgba(44, 130, 201,0.3)'\n            ctx.fillRect(this.x-(canvas.width*0.1), this.y, this.width+(canvas.width*0.1), this.height+3)\n            ctx.restore()\n        }    \n    }\n\n    update() {\n        if (this.x > (canvas.width*0.0183) && \n        this.x + this.width*(canvas.width*.001) < (canvas.width*0.995) && \n        this.y + this.height*(canvas.width*.002) < (canvas.height*0.9671) && \n        this.y - this.height*(canvas.width*.003) > (canvas.height*0.19) && \n        this.hit === false )  {\n            this.draw();\n            this.x = this.x + this.speed.x\n            this.y = this.y + this.speed.y\n        } \n    }\n}\n\n\n\nexport const arrows = [];\n\nexport function animateArrows() {\n    arrows.forEach((arrow, i) => {\n        arrow.update()\n\n        if (arrow.x < (canvas.width*0.0182) || \n            arrow.x > (canvas.width*0.995) - arrow.width*(canvas.width*.001)  || \n            arrow.y < (canvas.height*0.1932) + arrow.height*(canvas.width*.003) || \n            arrow.y > (canvas.height*0.9671)  - arrow.height*(canvas.width*.002) || \n            arrow.hit === true)  {\n            setTimeout(() => {\n                arrows.splice(i, 1)\n            }, 0)\n            \n        }\n    }) \n    handleShootingFrame()\n}\n\nexport const arrowSpec = {\n    arrowSpeed: 0.01\n}\n\nwindow.addEventListener('click', (event) => {\n    const angle = Math.atan2(\n        event.clientY - (char.y + (canvas.height*.19/2)), \n        event.clientX - (char.x + (canvas.height*.2/2)))\n    const speed = {\n        x: Math.cos(angle) * (canvas.height*arrowSpec.arrowSpeed),\n        y: Math.sin(angle) * (canvas.height*arrowSpec.arrowSpeed)\n\n    }\n    // setTimeout(() => {\n    if (char.arrowCount > 0) {\n        arrows.push(new Arrow( \n        char.x + (canvas.height*.2/2), \n        char.y + (canvas.height*.19/2.35), \n        speed, \n        24, \n        5, \n        0, \n        arrowSprite,\n        angle))\n        char.arrowCount--\n        char.shooting = true;\n    }\n    // }, 50)\n    char.frameY = 0;\n    \n    char.clickXPos = event.clientX\n\n})\n\n\n","import {ctx, canvas} from './canvas';\nimport {uiSideGap, dungeonHeight } from './ui';\nimport {dungeon, map} from './dungeon';\nimport {slimes, createSlimes } from './slime';\nimport {heartUI} from './heart';\nimport {animateChest} from './chest'\nimport { arrows } from './arrow';\n\n\nclass Char {\n    constructor() {\n        this.x = (canvas.width * .1);\n        this.y = (canvas.height * .6);\n        this.width = 100;\n        this.height = 100;\n        this.scale = (canvas.height*.2);\n        this.centerPointX = this.x + this.scale/2;\n        this.centerPointY = this.y + this.scale/2;\n        this.actualScale = canvas.height*.2/100;\n        this.frameX = 0;\n        this.frameY = 0;\n        this.getHitFrame = 0;\n        this.idleFrame = 0;\n        this.deathFrame = 0;\n        this.speed = (canvas.height*.005);\n        this.moving = false;\n        this.flip = 'right';\n        this.shooting = false;\n        this.counter = 0;\n        this.clickXPos = 0;\n        this.hit = false;\n        this.dead = false;\n        this.invulnerable = false;\n        this.reset = true;\n        this.arrowCount = 1;\n        this.fireRate = 1;\n        this.arrSpeed = 1;\n        this.damage = 1;\n    }\n   \n};\n\nexport const char = new Char();\n\nconst charSprite = new Image(); \ncharSprite.src = \"src/sprites/Huntress/Sprites/Character/Run.png\";\n\nconst charShooting = new Image();\ncharShooting.src = \"src/sprites/Huntress/Sprites/Character/Attack.png\";\n\nconst charGetHit = new Image();\ncharGetHit.src = \"src/sprites/Huntress/Sprites/Character/Get Hit.png\"\n\nconst charIdle = new Image();\ncharIdle.src = \"src/sprites/Huntress/Sprites/Character/Idle.png\"\n\nconst charDeath = new Image();\ncharDeath.src = \"src/sprites/Huntress/Sprites/Character/Death.png\"\n\nexport function drawSprite(img, frame) {\n    if (char.flip === 'right') {\n        ctx.drawImage(\n            img, \n            char.width * frame, \n            0, \n            char.width, \n            char.height, \n            char.x, \n            char.y, \n            (canvas.height*.2), \n            (canvas.height*.2));\n    } else if (char.flip != 'right') {\n        ctx.save();\n        ctx.translate(char.x+(canvas.height*.2), char.y)+(canvas.height*.2);\n        ctx.scale(-1, 1);\n        ctx.drawImage(\n            img, \n            char.width * frame, \n            0, \n            char.width, \n            char.height, \n            0, \n            0, \n            (canvas.height*.2), \n            (canvas.height*.2)) ;\n        ctx.restore();\n    }\n    \n}\n\nexport function animate(){\n    if (char.dead) {\n        drawSprite(\n            charDeath, \n            char.deathFrame)\n    }\n    else if (char.hit) {\n        drawSprite(\n            charGetHit, \n            char.getHitFrame)\n    }\n    else if (char.shooting) { \n        char.flip = char.clickXPos > char.x ? 'right' : 'left'\n        drawSprite(\n            charShooting, \n            char.frameY)\n\n        if (char.frameY === 5) char.shooting = false;   \n    } else if (char.moving) {\n        drawSprite(\n            charSprite, \n            char.frameX)\n    } else {\n         drawSprite(\n            charIdle, \n            char.idleFrame)\n    }\n    handleIdleFrame();\n    handleDeathFrame();\n    \n    \n    if (char.counter % (Math.floor(100/char.fireRate)) === 0 && char.arrowCount === 0) char.arrowCount = 1;\n    \n}\n\n\nfunction handleSpriteFrame() {  \n    if (char.counter % 5 === 0) {\n       if (char.frameX < 7 ) char.frameX++;\n       else char.frameX = 0;  \n    }    \n}\n\nexport function handleShootingFrame() {\n    if (char.counter % 3 === 0) {\n        if (char.frameY < 5) char.frameY++;\n        else char.frameY = 0;\n    }\n}\n\nexport function handleGetHitFrame() {\n    if (char.counter % 10 === 0) {\n        if (char.getHitFrame < 2) {char.getHitFrame++}\n        else {\n            char.getHitFrame = 0;\n            char.hit = false;    \n        }\n    }\n    if (char.invulnerable) {\n        char.frameX = 11;\n    }\n    if (char.counter % 120 === 0) {char.invulnerable = false}\n}\n\nexport function handleIdleFrame() {\n    char.counter+=1;\n    char.moving = false;\n    if (char.counter % 5 === 0) {\n        if (char.idleFrame < 9) {char.idleFrame++}\n        else {\n            char.idleFrame = 0;  \n        }\n    }\n}\n\nexport function handleDeathFrame() {\n    char.moving = false;\n    if (heartUI.heartCount === 0) {\n        char.dead = true\n    }\n\n    if (char.counter % 15 === 0) {\n        if (char.deathFrame < 9) {char.deathFrame++}\n    }\n}\n\n\nconst keys = {\n    'ArrowUp': false,\n    'ArrowDown': false,\n    'ArrowLeft' : false,\n    'ArrowRight' : false,\n    'w': false,\n    'a': false,\n    's': false,\n    'd': false,\n};\n\n\n\nwindow.addEventListener(\"keydown\", (e) => {\n    e.preventDefault();\n    keys[e.key] = true;\n    // char.moving = true;\n    console.log(e.key)\n});\n\nwindow.addEventListener(\"keyup\", (e) => {\n    e.preventDefault();\n    keys[e.key] = false;\n    // char.moving = false;\n});\n\nexport function moveChar() {\n    if ((keys['ArrowUp'] || keys[\"w\"]) && (char.y > (canvas.height *0.4 ))) { //- dungeonHeight- 40*char.actualScale\n        char.moving = true;\n        char.y -= char.speed;\n        char.centerPointY -= char.speed;\n        handleSpriteFrame()}\n    if ((keys['ArrowDown'] || keys[\"s\"]) && (char.y < (canvas.height-(uiSideGap)-75*char.actualScale))) {\n        char.moving = true;\n        char.y += char.speed;\n        char.centerPointY += char.speed;\n        handleSpriteFrame()} \n    if ((keys['ArrowLeft'] || keys[\"a\"]) && (char.x > ((uiSideGap)-30*char.actualScale))) {\n        char.moving = true;\n        char.x -= char.speed;\n        // if (dungeon.frameX != 0) dungeon.frameX -= 1;\n        char.centerPointX -= char.speed;\n        char.flip = 'left'\n        handleSpriteFrame()} \n    if ((keys['ArrowRight'] || keys[\"d\"]) && (char.x < (canvas.width-(uiSideGap)-70*char.actualScale))) {\n        char.moving = true;\n        char.x += char.speed;\n        char.centerPointX += char.speed;\n        if (dungeon.frameX < 490 && slimes.length < 1 && dungeon.chest === false) {\n            dungeon.frameX += 1;\n            map.location += (dungeon.frameX * canvas.width*.244 * .0000047736)\n        } \n        char.flip = 'right';\n        handleSpriteFrame()} \n    if (keys[' ']) {\n        if (char.flip === 'right' && (char.x > ((uiSideGap)-30*char.actualScale)) && (char.x < (canvas.width-(uiSideGap)-70*char.actualScale)) ) {\n            char.x += char.speed*4\n            char.centerPointX += char.speed*4\n        } else if (char.flip != 'right' && (char.x > ((uiSideGap)-30*char.actualScale)) && (char.x < (canvas.width-(uiSideGap)-70*char.actualScale))) {\n            char.x -= char.speed*4\n            char.centerPointX -= char.speed*4\n        } \n    }\n}\n\n","import {canvas, ctx} from './canvas'\nexport const heartImg = new Image();\nheartImg.src = \"src/images/heart.png\"\n\nexport const heartUI = {\n    heartPos: [0.69, 0.74, 0.79 ],\n    heartCount: 3,\n    counter: 0\n}\n\nfunction drawHeart(arr) {\n    arr.forEach((heartPos, i) => {\n        if (heartUI.heartCount - (i) > 0) {\n        ctx.drawImage(\n            heartImg,\n            canvas.width * heartPos,\n            canvas.height *.015,\n            canvas.width * 0.1,\n            canvas.width * 0.1\n        )}\n    })\n}\n\n\n\n\nexport function heart() {\n    drawHeart(heartUI.heartPos)\n}","import {ctx, canvas} from './canvas';\nimport { drawSprite, animate, char, handleGetHitFrame } from './character';\nimport {arrows} from './arrow';\nimport {heart, heartUI} from './heart';\n\nconst skeleton = new Image();\nskeleton.src  = \"src/sprites/Skeleton/Skeleton.png\";\n\nclass Skeleton {\n    constructor(speed, width, height, frameX, sprite, randomFactor) {\n        this.x = (Math.random() * (canvas.width*0.96 - canvas.width*0.5) + canvas.width*0.7);\n        this.y = (Math.random() * (canvas.height*0.93 - canvas.height*0.45) + canvas.height*0.45);\n        this.scale = (canvas.height*.15);\n        this.centerPointX = this.x + this.scale/2; \n        this.centerPointY = this.y + this.scale/2;\n        this.speed = speed;\n        this.width = width;\n        this.height = height;\n        this.frameX = frameX;\n        this.sprite = sprite;\n        this.flip = 'right';\n        this.counter = 0;\n        this.randomCounter = 0;\n        this.xSpeed = 0;\n        this.ySpeed = 0;\n        this.moving = false;\n        this.stop = 10+this.randomFactor;\n        this.xMove = 0;\n        this.yMove = 0;\n        this.randomFactor = randomFactor*2;\n        this.left = this.x;\n        this.right = this.x + this.scale;\n        this.top = this.y;\n        this.bot = this.y + this.scale;\n    }\n\n    draw() {\n        ctx.drawImage(\n            this.sprite,\n            this.width * this.frameX,\n            0,\n            this.width,\n            this.height,\n            this.x,\n            this.y,\n            this.scale, \n            this.scale)   \n    }\n\n    update() {\n        this.draw();\n    }\n\n    handleSkeletonAnimation() {\n        this.counter += 1;\n        if (this.counter % 4 === 0) {\n            if (Math.abs(this.x - char.x) < 200 && this.frameX < 15) {\n                this.frameX++\n            } else if (this.frameX < 8) {\n                this.frameX++\n            } else if (this.frameX === 8 || this.frameX === 15) {\n                this.frameX = 0;\n            } else {\n                this.frameX++\n            }\n        }      \n    }\n\n    handleMovement() {\n        this.randomCounter += 1;\n        if(this.moving) {\n            \n            this.x += this.xSpeed;\n            this.centerPointX = this.x + this.scale/2\n            this.y += this.ySpeed;\n            this.centerPointY = this.y + this.scale/2\n            this.draw();\n            this.stop -= 1;\n            if(this.stop <= 0) {\n                this.moving = false;\n                this.stop = 10+this.randomFactor;\n            }\n        } else {\n            if(this.stop > 0) {\n                this.stop -= 1;\n                this.draw();\n            } else {\n                if (Math.abs(char.x - this.x) < canvas.height/4 && Math.abs(char.y - this.y) < canvas.height/4   ) { // && this.randomFactor % 2 === 0\n                    this.xMove = char.centerPointX\n                    this.yMove = char.centerPointY\n                    if (Math.abs(char.x - this.x) < canvas.height/4) {\n                        this.xSpeed = (this.xMove - this.x)/30;\n                        this.ySpeed = (this.yMove - this.y)/30;\n                    } else {\n                        this.xSpeed = (this.xMove - this.x)/120;\n                        this.ySpeed = (this.yMove - this.y)/120;\n                    }\n                 \n                } else {\n                    this.xMove = (Math.random() * (canvas.width*0.932 - canvas.width*0.02) + canvas.width*0.02) + canvas.width*0.05;\n                    this.yMove = (Math.random() * (canvas.height*0.9 - canvas.height*0.5) + canvas.height*0.45) + canvas.height*0.045;\n                    this.xSpeed = (this.xMove - this.x)/120;\n                    this.ySpeed = (this.yMove - this.y)/120;\n                }   \n               \n                this.draw()\n                this.stop = 30+this.randomFactor;\n                this.moving = true;\n            }\n        }\n       \n    }\n}\n\nexport const skeletons = [];\n\nexport function createSkeletons(count){\n\n    let min = Math.ceil(0);\n    let max = Math.floor(8);\n    Math.floor(Math.random() * (max - min + 1) + min)\n    for (let i = 1; i <= count; i++) {\n        skeletons.push(\n            new Skeleton (\n                (canvas.height*.013),\n                80,\n                64,\n                (Math.floor(Math.random() * (max-2 - min + 1) + min)),\n                skeleton,\n                i\n            )\n        )\n    }\n}\n\nexport function animateSkeleton() {\n    heartUI.counter++\n    skeletons.forEach((skeleton, index) => {\n        skeleton.handleSkeletonAnimation()\n        skeleton.handleMovement()\n       \n        arrows.forEach(arrow => {\n            const arrDistance = Math.hypot(arrow.x - skeleton.centerPointX, arrow.y - skeleton.centerPointY)\n            // console.log(distance)\n\n            if ((arrDistance - skeleton.scale/2) < 1) {\n                skeletons.splice(index, 1)\n                arrow.hit = true; \n            }\n            // Rectangular formula\n            // if (slime.x < arrow.right &&\n            //     slime.right > arrow.x &&\n            //     slime.y < arrow.bot &&\n            //     slime.bot > arrow.y) {\n            //         console.log('hit!')\n            //     }\n            })  \n        \n        const charDistance = Math.hypot(skeleton.centerPointX - char.centerPointX, skeleton.centerPointY - char.centerPointY) \n        if ((charDistance - skeleton.scale/8 - char.scale/4) < 1 && heartUI.heartCount > 0 && char.invulnerable != true) {\n            heartUI.heartCount -= 1\n            char.invulnerable = true;\n            char.hit = true;\n            char.deathFrame = 0;\n        }\n                \n    })\n    handleGetHitFrame()\n}\n","import { ctx, canvas } from \"./canvas\";\nimport { dungeon } from \"./dungeon\";\nimport { char } from './character';\nimport {arrowSpec} from './arrow';\nimport {skeletons} from './skeleton';\n\nconst chest = new Image();\nchest.src = \"src/sprites/Chest/chest.png\";\n\nclass Chest {\n  constructor(width, height, frameX, frameY, sprite) {\n    this.x = canvas.width * 0.10;\n    this.y = canvas.height * 0.7;\n    // this.x = canvas.width * 0.3;\n    // this.y = canvas.height * 0.7;\n    this.width = width;\n    this.height = height;\n    this.frameX = frameX;\n    this.frameY = frameY;\n    this.sprite = sprite;\n    this.scale = canvas.height * 0.05;\n    this.counter = 0;\n    this.centerPointX = this.x + this.scale/2; \n    this.centerPointY = this.y + this.scale/2;\n\n    // 300x300\n  }\n\n  draw() {\n    ctx.drawImage(\n      this.sprite,\n      this.width * this.frameX,\n      this.height * this.frameY,\n      this.width,\n      this.height,\n      this.x,\n      this.y,\n      this.scale,\n      this.scale\n    );\n  }\n\n  handleFrames() {\n    this.counter += 1;\n    if (this.counter % 8 === 0) {\n       this.frameX++;\n       if (this.frameX === 5) {\n            this.frameX = 0;\n            this.frameY++;\n            if (this.frameY === 2) {\n                this.frameY = 0;\n            }\n       } \n    }\n  }\n\n  update() {\n    this.handleFrames();\n    this.draw();\n  }\n}\n\nconst chester = new Chest(300, 300, 0, 0, chest);\n\nexport function animateChest() {\n    const charDistance = Math.hypot(chester.centerPointX - char.centerPointX, chester.centerPointY - char.centerPointY) \n    if ((charDistance - chester.scale/4 - char.scale/4) < 1 && dungeon.chest === true) {\n        dungeon.chest = false;\n        arrowSpec.arrowSpeed = 0.010 + (0.005*char.arrSpeed)\n        char.arrSpeed += 1\n        char.fireRate += 1\n    }\n    if (dungeon.chest && skeletons.length === 0) chester.update();\n}\n","import {canvas, ctx} from './canvas';\nimport {slimes, createSlimes} from './slime';\nimport {createSkeletons, skeletons} from \"./skeleton\"\nimport {heartUI} from './heart';\nimport {animateChest} from './chest';\n\nexport const dungeonImg = new Image();\ndungeonImg.src = \"src/images/CrystalCaverns_Midground.png\";\n\nexport const dungeonOverlay = new Image();\ndungeonOverlay.src = \"src/images/CrystalCaverns_Foreground.png\"\n\nexport function drawDungeon(image) {\n        ctx.drawImage(\n            image,\n            (canvas.height*.005) * dungeon.frameX,\n            0,\n            dungeon.width,\n            dungeon.height,\n            canvas.width * 0.0123,\n            canvas.height * 0.196,\n            canvas.width * 0.976,\n            canvas.height * 0.78\n        )\n        if (dungeon.frameX === 175 && dungeon.chest === false) {\n            dungeon.frameX++\n            dungeon.chest = true\n        };\n\n        if ( slimes.length < 1 && dungeon.frameX < 3) {\n                dungeon.chest = true;\n                dungeon.frameX++;\n        };\n\n        if (dungeon.frameX === 172) {\n            dungeon.frameX = 173\n            createSkeletons(5)\n        }\n        animateChest();\n}\n\nexport const dungeon = {\n    width: 2625,\n    height: 1080,\n    frameX: 0,\n    chest: false\n}\n\nexport const directionImg = new Image();\n\n\nexport const directionSprite = {\n    width: 53,\n    height: 32,\n    counter: 1,\n    frame: 1,\n    toggle: 'off'\n}\n\nexport function drawDirection() {\n    directionImg.src = `src/sprites/direction/AR100_nyknck/AR102_nyknck/AR102_0${directionSprite.frame}.png`\n    if (directionSprite.toggle === \"on\"){\n            ctx.drawImage(\n            directionImg,\n            canvas.width * 0.9,\n            canvas.height * 0.275,\n            canvas.width*.0504,\n            canvas.width*.0504 * directionSprite.height / directionSprite.width\n\n        )\n        if (directionSprite.counter++ % 10 === 0) directionSprite.frame++\n        if (directionSprite.frame === 6) directionSprite.frame = 1;\n    }\n\n    if (dungeon.frameX === 3 && dungeon.chest === false) {\n        directionSprite.toggle = \"on\";\n    }\n\n    if (dungeon.frameX === 150) directionSprite.toggle = \"off\";\n}\n\n\nexport const map = {\n    width: 5888,\n    height: 1080,\n    location: (canvas.width*.244 * 0.42211)\n}\n\nexport function drawMap() {\n        ctx.drawImage(\n        dungeonImg,\n        canvas.width * .0205,\n        canvas.height * .03875,\n        canvas.width*.244,\n        canvas.width*.339 * map.height / map.width\n\n    )\n\n     ctx.drawImage(\n        dungeonOverlay,\n        canvas.width * .02025,\n        canvas.height * .03875,\n        canvas.width*.244,\n        canvas.width*.339 * map.height / map.width\n\n    )\n    \n    ctx.fillStyle = 'white'\n    ctx.fillRect(\n        canvas.width * .0205 + map.location,\n        canvas.height * .03895,\n        canvas.width * .001,\n        canvas.width*.337 * map.height / map.width\n    )\n\n}\n\n\n\n","import {ctx, canvas} from './canvas';\nimport { drawSprite, animate, char, handleGetHitFrame } from './character';\nimport {arrows} from './arrow';\nimport {heart, heartUI} from './heart';\n\nconst slime = new Image();\nslime.src  = \"src/sprites/Slime/SlimeA.png\";\n\nclass Slime {\n    constructor(speed, width, height, frameX, sprite, randomFactor) {\n        this.x = (Math.random() * (canvas.width*0.96 - canvas.width*0.5) + canvas.width*0.5);\n        this.y = (Math.random() * (canvas.height*0.93 - canvas.height*0.45) + canvas.height*0.45);\n        this.scale = (canvas.height*.05);\n        this.centerPointX = this.x + this.scale/2; \n        this.centerPointY = this.y + this.scale/2;\n        this.speed = speed;\n        this.width = width;\n        this.height = height;\n        this.frameX = frameX;\n        this.sprite = sprite;\n        this.flip = 'right';\n        this.counter = 0;\n        this.randomCounter = 0;\n        this.xSpeed = 0;\n        this.ySpeed = 0;\n        this.moving = false;\n        this.stop = 10+this.randomFactor;\n        this.xMove = 0;\n        this.yMove = 0;\n        this.randomFactor = randomFactor*2;\n        this.left = this.x;\n        this.right = this.x + this.scale;\n        this.top = this.y;\n        this.bot = this.y + this.scale;\n    }\n\n    draw() {\n        ctx.drawImage(\n            this.sprite,\n            this.width * this.frameX,\n            0,\n            this.width,\n            this.height,\n            this.x,\n            this.y,\n            this.scale, \n            this.scale)   \n    }\n\n    update() {\n        this.draw();\n    }\n\n    handleSlimeAnimation() {\n        this.counter += 1;\n        if (this.counter % 4 === 0) {\n            if (Math.abs(this.x - char.x) < 200 && this.frameX < 15) {\n                this.frameX++\n            } else if (this.frameX < 8) {\n                this.frameX++\n            } else if (this.frameX === 8 || this.frameX === 15) {\n                this.frameX = 0;\n            } else {\n                this.frameX++\n            }\n        }      \n    }\n\n    handleMovement() {\n        this.randomCounter += 1;\n        if(this.moving) {\n            \n            this.x += this.xSpeed;\n            this.centerPointX = this.x + this.scale/2\n            this.y += this.ySpeed;\n            this.centerPointY = this.y + this.scale/2\n            this.draw();\n            this.stop -= 1;\n            if(this.stop <= 0) {\n                this.moving = false;\n                this.stop = 10+this.randomFactor;\n            }\n        } else {\n            if(this.stop > 0) {\n                this.stop -= 1;\n                this.draw();\n            } else {\n                if (Math.abs(char.x - this.x) < canvas.height/4 && Math.abs(char.y - this.y) < canvas.height/4   ) { // && this.randomFactor % 2 === 0\n                    this.xMove = char.centerPointX\n                    this.yMove = char.centerPointY\n                    if (Math.abs(char.x - this.x) < canvas.height/4) {\n                        this.xSpeed = (this.xMove - this.x)/30;\n                        this.ySpeed = (this.yMove - this.y)/30;\n                    } else {\n                        this.xSpeed = (this.xMove - this.x)/120;\n                        this.ySpeed = (this.yMove - this.y)/120;\n                    }\n                 \n                } else {\n                    this.xMove = (Math.random() * (canvas.width*0.932 - canvas.width*0.02) + canvas.width*0.02) + canvas.width*0.05;\n                    this.yMove = (Math.random() * (canvas.height*0.9 - canvas.height*0.5) + canvas.height*0.45) + canvas.height*0.045;\n                    this.xSpeed = (this.xMove - this.x)/120;\n                    this.ySpeed = (this.yMove - this.y)/120;\n                }   \n               \n                this.draw()\n                this.stop = 30+this.randomFactor;\n                this.moving = true;\n            }\n        }\n       \n    }\n}\n\nexport const slimes = [];\n\nexport function createSlimes(count){\n\n    let min = Math.ceil(0);\n    let max = Math.floor(8);\n    Math.floor(Math.random() * (max - min + 1) + min)\n    for (let i = 1; i <= count; i++) {\n        slimes.push(\n            new Slime (\n                (canvas.height*.013),\n                15.99,\n                16,\n                (Math.floor(Math.random() * (max-2 - min + 1) + min)),\n                slime,\n                i\n            )\n        )\n    }\n}\n\ncreateSlimes(5)\n\nexport function animateSlime() {\n    heartUI.counter++\n    slimes.forEach((slime, index) => {\n        slime.handleSlimeAnimation()\n        slime.handleMovement()\n       \n        arrows.forEach(arrow => {\n            const arrDistance = Math.hypot(arrow.x - slime.centerPointX, arrow.y - slime.centerPointY)\n            // console.log(distance)\n\n            if ((arrDistance - slime.scale/2) < 1) {\n                slimes.splice(index, 1)\n                arrow.hit = true; \n            }\n            // Rectangular formula\n            // if (slime.x < arrow.right &&\n            //     slime.right > arrow.x &&\n            //     slime.y < arrow.bot &&\n            //     slime.bot > arrow.y) {\n            //         console.log('hit!')\n            //     }\n            })  \n        \n        const charDistance = Math.hypot(slime.centerPointX - char.centerPointX, slime.centerPointY - char.centerPointY) \n        if ((charDistance - slime.scale/4 - char.scale/4) < 1 && heartUI.heartCount > 0 && char.invulnerable != true) {\n            heartUI.heartCount -= 1\n            char.invulnerable = true;\n            char.hit = true;\n            char.deathFrame = 0;\n        }\n                \n    })\n    handleGetHitFrame()\n}\n\n\n\n\n\n\n\n\n\n\n","import {ctx, canvas} from './canvas'\nimport { slimes } from './slime';\n\nconst uiWidth = canvas.width * .975;\nexport const uiSideGap = (canvas.width - uiWidth)/2;\nexport const dungeonHeight = canvas.height * .775\n\nconst rocks = new Image();\nrocks.src = \"src/images/rocks.png\";\n\nconst itemBox = new Image();\nitemBox.src = \"src/images/itembox.png\"\n\n\nexport const drawUi = () => {    \n    const rockPattern = ctx.createPattern(rocks, 'repeat');\n    const uiHeight = canvas.height * .15;\n    ctx.fillStyle = 'black';\n \n   \n    ctx.fillRect(uiSideGap,uiSideGap,uiWidth,uiHeight)\n\n    const dungeonWidth = uiWidth;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(uiSideGap, uiSideGap*2 + uiHeight, dungeonWidth, dungeonHeight)\n\n    const uiBoxSizes = [.25, .1625, .2775];\n\n    const drawUiBoxes = (boxSizes) => {\n        const height = uiHeight * .79;\n        const uiBoxGap = (uiHeight - height)/2;\n        const uiTopPos = uiSideGap + uiBoxGap\n        let totalLeftPos = uiSideGap*2 + uiBoxGap + 0.25*uiWidth\n        \n        boxSizes.forEach(size => {\n            const width = uiWidth * size;\n            // ctx.fillStyle = itemBox;\n            \n            ctx.strokeStyle = 'white';\n            ctx.lineWidth = 2;\n            // ctx.fillRect(totalLeftPos, uiTopPos, width, height)\n            ctx.strokeRect(totalLeftPos, uiTopPos, width, height)\n            // ctx.drawImage(\n            //     itemBox,\n            //     totalLeftPos,\n            //     uiTopPos,\n            //     width,\n            //     height\n\n            // )\n            totalLeftPos += uiSideGap + width\n        })\n    }\n\n    drawUiBoxes(uiBoxSizes);\n}\n\n","import {char} from \"./character\"\n\nconst { ctx, canvas } = require(\"./canvas\");\n\nexport function gameOver() {\n    ctx.fillStyle = 'white';\n    ctx.font = '40px sans serif';\n    const text = \"Game Over...\"\n    ctx.fillText(text, canvas.width*0.5 - (ctx.measureText(text).width/2), canvas.height*0.5)\n}\n\n\nexport function instruction() {\n    const fontSize = (canvas.width) * .009;\n    ctx.fillStyle = 'white';\n    ctx.font =  fontSize.toString() + 'px sans serif';\n    ctx.fillText(\"1. Use Arrow Keys or W, A, S, D to move & space to dash\", canvas.width * .285, canvas.height*0.075)\n    ctx.fillText(\"2. Click to shoot arrow towards desired location\", canvas.width * .285, canvas.height*0.105)\n    ctx.fillText(\"3. Kill the boss before your health drops to 0\", canvas.width * .285, canvas.height*0.135)\n}\n\nexport function arrowStats() {\n    const fontSize = (canvas.width) * .009;\n    ctx.fillStyle = 'white';\n    ctx.font =  fontSize.toString() + 'px sans serif';\n    ctx.fillText(\"Fire Rate\", canvas.width * .5425, canvas.height*0.075)\n    ctx.fillText(\"Speed\", canvas.width * .5425, canvas.height*0.105)\n    ctx.fillText(\"Damage\", canvas.width * .5425, canvas.height*0.135)\n}\n\nfunction fireRate() {\n    ctx.fillStyle = 'white'\n    ctx.strokeRect(canvas.width * .585, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n        if (char.fireRate > 0) ctx.fillRect(canvas.width * .585, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .596, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n        if (char.fireRate > 1) ctx.fillRect(canvas.width * .596, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .607, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n        if (char.fireRate > 2) ctx.fillRect(canvas.width * .607, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .618, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n        if (char.fireRate > 3) ctx.fillRect(canvas.width * .618, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .629, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n        if (char.fireRate > 4) ctx.fillRect(canvas.width * .629, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .64, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n        if (char.fireRate > 5) ctx.fillRect(canvas.width * .64, canvas.height*0.059, canvas.width * .01, canvas.width * .01)\n    \n}\n\nfunction speed() {\n    ctx.fillStyle = 'white'\n    ctx.strokeRect(canvas.width * .585, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n        if (char.arrSpeed > 0) ctx.fillRect(canvas.width * .585, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .596, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n        if (char.arrSpeed > 1) ctx.fillRect(canvas.width * .596, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .607, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n        if (char.arrSpeed > 2) ctx.fillRect(canvas.width * .607, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .618, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n        if (char.arrSpeed > 3) ctx.fillRect(canvas.width * .618, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .629, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n        if (char.arrSpeed > 4) ctx.fillRect(canvas.width * .629, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .64, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n        if (char.arrSpeed > 5) ctx.fillRect(canvas.width * .64, canvas.height*0.089, canvas.width * .01, canvas.width * .01)\n    \n}\n\nfunction damage() {\n    ctx.fillStyle = 'white'\n    ctx.strokeRect(canvas.width * .585, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n        if (char.damage > 0) ctx.fillRect(canvas.width * .585, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .596, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n        if (char.damage > 1) ctx.fillRect(canvas.width * .596, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .607, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n        if (char.damage > 2) ctx.fillRect(canvas.width * .607, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .618, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n        if (char.damage > 3) ctx.fillRect(canvas.width * .618, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .629, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n        if (char.damage > 4) ctx.fillRect(canvas.width * .629, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n    ctx.strokeRect(canvas.width * .64, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n        if (char.damage > 5) ctx.fillRect(canvas.width * .64, canvas.height*0.119, canvas.width * .01, canvas.width * .01)\n    \n}\n\nexport function statBars() {\n    fireRate();\n    speed();\n    damage();\n}\n","export const gameMusic = new Audio();\ngameMusic.src = 'src/audio/music_zapsplat_game_music_action_uplifting_electro_house_anthem_retro_melody_026.mp3'","import {drawCanvas, ctx} from './scripts/canvas';\nimport {drawUi} from './scripts/ui';\nimport {moveChar, animate} from './scripts/character';\nimport {animateArrows} from \"./scripts/arrow\";\nimport {animateSlime, slimes} from \"./scripts/slime\";\nimport {dungeon, drawDungeon, dungeonImg, dungeonOverlay, drawMap, drawDirection} from \"./scripts/dungeon\";\nimport {heart, heartUI} from './scripts/heart';\nimport {gameOver, instruction, arrowStats, statBars} from './scripts/game'\nimport {gameMusic} from './scripts/gameMusic'\nimport {animateSkeleton, skeletons} from \"./scripts/skeleton\"\n\n \n\nwindow.onload = function() {\n    const framesPerSecond = 60;\n    setInterval(function() {\n        ctx.clearRect(0,0,window.innerWidth, window.innerHeight);\n        drawCanvas();\n        \n        if (heartUI.heartCount != 0) {\n            drawUi();\n            heart();\n            drawMap();\n            drawDungeon(dungeonImg);\n            drawDirection();\n            if (skeletons.length > 0) animateSkeleton();\n            if (slimes.length > 0) animateSlime(); \n            moveChar();\n            animateArrows();\n            instruction();\n            arrowStats();\n            statBars();\n        }\n        animate();\n        if (heartUI.heartCount === 0) {\n            gameOver()\n            setTimeout(() => {\n                window.location.reload(false)\n            }, 5000);\n        }\n        else drawDungeon(dungeonOverlay)\n    }, 1000/framesPerSecond);\n}\n\n"],"sourceRoot":""}